/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.73
 * Generated at: 2023-06-28 00:59:02 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.member;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class updatePwd_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar", Long.valueOf(1683963886000L));
    _jspx_dependants.put("jar:file:/C:/Project/Bookmaroo/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/Bookmaroo/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar!/META-INF/c.tld", Long.valueOf(1425946270000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fscope_005fnobody;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fscope_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fscope_005fnobody.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<title>비밀번호 변경</title>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\r\n");
      out.write("<link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>\r\n");
      out.write("<link href=\"https://fonts.googleapis.com/css2?family=Inter:wght@300&display=swap\" rel=\"stylesheet\">\r\n");
      out.write("<script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.bundle.min.js\" integrity=\"sha384-kenU1KFdBIe4zVF0s0G1M5b4hcpxyD9F7jL+jjXkk+Q2h455rYXK/7HAuoJl+0I4\" crossorigin=\"anonymous\"></script>\r\n");
      out.write("<link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-rbsA2VBKQhggwzxH7pPCaAqO46MgnOM80zW1RWuH61DGLwZJEdK2Kadq2F9CUG65\" crossorigin=\"anonymous\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/bootstrap-icons@1.7.1/font/bootstrap-icons.css\">\r\n");
      out.write("<script src=\"http://code.jquery.com/jquery-3.6.1.min.js\"></script>\r\n");
      out.write("<style>\r\n");
      out.write("	#main {\r\n");
      out.write("		padding: 35px;\r\n");
      out.write(" 	    font-family: 'Inter', sans-serif;\r\n");
      out.write(" 	}\r\n");
      out.write("	hr {\r\n");
      out.write("		width: 300px;\r\n");
      out.write("	}\r\n");
      out.write("	.td_width {\r\n");
      out.write("		width: 250px;\r\n");
      out.write("	}\r\n");
      out.write("	::placeholder {\r\n");
      out.write("  		color: black;\r\n");
      out.write(" 		font-size: .8em;\r\n");
      out.write(" 		font-weight: 400;\r\n");
      out.write("	}\r\n");
      out.write("	#checkPwdResult {\r\n");
      out.write("		font-size: 11px;\r\n");
      out.write("		color: gray;\r\n");
      out.write("		margin-left: 11px;\r\n");
      out.write("	}\r\n");
      out.write("	#newPwdResult {\r\n");
      out.write("		font-size: 11px;\r\n");
      out.write("		color: gray;\r\n");
      out.write("		margin-left: 11px;\r\n");
      out.write("	}\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	");
      if (_jspx_meth_c_005fset_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("	<section>\r\n");
      out.write("		<form id=\"updatePwdForm\" action=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/updatePwd.me\" method=\"post\">\r\n");
      out.write("			<div id=\"main\" align=\"center\">\r\n");
      out.write("				<h3>🔑</h3>\r\n");
      out.write("				<h4><b>비밀번호 변경</b></h4>\r\n");
      out.write("				<br/>\r\n");
      out.write("				<table>\r\n");
      out.write("					<tr>\r\n");
      out.write("						<td class=\"td_width\">\r\n");
      out.write("							<input class=\"form-control\" type=\"password\" id=\"password\" name=\"password\" placeholder=\"현재 비밀번호\" aria-label=\"default input example\"/>\r\n");
      out.write("						</td>\r\n");
      out.write("						<td>\r\n");
      out.write("						</td>\r\n");
      out.write("					</tr>\r\n");
      out.write("					<tr>\r\n");
      out.write("						<td>\r\n");
      out.write("							<span id=\"checkPwdResult\">현재 비밀번호를 입력하세요.</span>\r\n");
      out.write("						</td>\r\n");
      out.write("						<td></td>\r\n");
      out.write("					</tr>\r\n");
      out.write("					<tr>\r\n");
      out.write("						<td class=\"td_width\">\r\n");
      out.write("							<input class=\"form-control\" type=\"password\" id=\"newPassword\" name=\"newPassword\" placeholder=\"새 비밀번호\" aria-label=\"default input example\"/>\r\n");
      out.write("						</td>\r\n");
      out.write("						<td></td>\r\n");
      out.write("					</tr>\r\n");
      out.write("					<tr>\r\n");
      out.write("						<td class=\"td_width\">\r\n");
      out.write("							<input class=\"form-control\" type=\"password\" id=\"checkNewPassword\" name=\"checkNewPassword\" placeholder=\"새 비밀번호 확인\" aria-label=\"default input example\"/>\r\n");
      out.write("						</td>\r\n");
      out.write("						<td></td>\r\n");
      out.write("					</tr>\r\n");
      out.write("					<tr>\r\n");
      out.write("						<td>\r\n");
      out.write("							<span id=\"newPwdResult\">8~16자 영문 대소문자, 숫자, 특수문자 포함</span>\r\n");
      out.write("						</td>\r\n");
      out.write("						<td></td>\r\n");
      out.write("					</tr>\r\n");
      out.write("					<tr>\r\n");
      out.write("						<td>\r\n");
      out.write("						</td>\r\n");
      out.write("					</tr>\r\n");
      out.write("				</table>\r\n");
      out.write("				<hr>\r\n");
      out.write("				<button type=\"button\" id=\"update\" class=\"btn btn-primary\" style=\"--bs-btn-padding-y: .40rem; --bs-btn-padding-x: 4.0rem; --bs-btn-font-size: 1.0rem; background-color: #4373E6;\" disabled>비밀번호 변경</button>\r\n");
      out.write("			</div>\r\n");
      out.write("		</form>\r\n");
      out.write("	</section>\r\n");
      out.write("</body>\r\n");
      out.write("<script>\r\n");
      out.write("	window.onload = () =>{\r\n");
      out.write("		\r\n");
      out.write("		let currentPwd = false;\r\n");
      out.write("		let newPwd1 = false;\r\n");
      out.write("		let newPwd2 = false;\r\n");
      out.write("		\r\n");
      out.write("		\r\n");
      out.write("		//● ● ● 현재 비밀번호 일치 여부 확인 ①\r\n");
      out.write("		const password = document.getElementById('password');  // 현재 비밀번호 input\r\n");
      out.write("		const checkPwdResult = document.getElementById('checkPwdResult'); // 현재 비밀번호 일치 여부 노출\r\n");
      out.write("		\r\n");
      out.write("		password.addEventListener('change', function(){\r\n");
      out.write("			// 서버로 입력한 비밀번호 보내서 현재 비밀번호와 일치하는지 여부 확인\r\n");
      out.write("			$.ajax({\r\n");
      out.write("				url: '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/checkPwd.me',\r\n");
      out.write("				type: 'POST',\r\n");
      out.write("				dataType: 'json',\r\n");
      out.write("				data: {password: password.value.trim()},\r\n");
      out.write("				success: (data) =>{\r\n");
      out.write("					if(data.result == 'Y'){\r\n");
      out.write("						password.style.color = '#4373E6';\r\n");
      out.write("						checkPwdResult.style.color = '#4373E6';\r\n");
      out.write("						checkPwdResult.innerText = '🍀비밀번호 확인이 일치합니다.';\r\n");
      out.write("						currentPwd = true;\r\n");
      out.write("						if(currentPwd && newPwd1 && newPwd2){\r\n");
      out.write("							$('#update').attr('disabled', false);\r\n");
      out.write("						}\r\n");
      out.write("					} else if(data.result == 'N'){\r\n");
      out.write("						password.style.color = '#DC6089';\r\n");
      out.write("						checkPwdResult.style.color = '#DC6089';\r\n");
      out.write("						checkPwdResult.innerText = '비밀번호 확인이 일치하지 않습니다.';\r\n");
      out.write("						currentPwd = false;\r\n");
      out.write("						$('#update').attr('disabled', true);\r\n");
      out.write("					}\r\n");
      out.write("				},\r\n");
      out.write("				error : (data) =>{\r\n");
      out.write("					console.log(data);\r\n");
      out.write("				}\r\n");
      out.write("			});\r\n");
      out.write("		});\r\n");
      out.write("		\r\n");
      out.write("		\r\n");
      out.write("		// ● ● ● 새 비밀번호 정규 표현식\r\n");
      out.write("		const newPassword = document.getElementById('newPassword');	// 새 비밀번호 \r\n");
      out.write("		const checkNewPassword = document.getElementById('checkNewPassword'); // 새 비밀번호 확인\r\n");
      out.write("		const newPwdResult = document.getElementById('newPwdResult'); // 새 비밀번호 결과\r\n");
      out.write("		\r\n");
      out.write("		const reg = /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[~!@#$%^&*()+|=])[A-Za-z\\d~!@#$%^&*()+|=]{8,16}$/;\r\n");
      out.write("		\r\n");
      out.write("		newPassword.addEventListener('change', function(){\r\n");
      out.write("			if(this.value.trim() == ''){\r\n");
      out.write("				newPwdResult.style.color = '#DC6089';\r\n");
      out.write("				newPwdResult.innerText ='변경할 비밀번호를 입력해주세요.';\r\n");
      out.write("				newPwd1 = false;\r\n");
      out.write("				$('#update').attr('disabled', true);\r\n");
      out.write("			} else if(!reg.test(this.value.trim())){\r\n");
      out.write("				newPwdResult.innerText = '비밀번호 형식에 맞게 입력해주세요.';\r\n");
      out.write("				newPwdResult.style.color = '#DC6089';\r\n");
      out.write("				newPwd1 = false;\r\n");
      out.write("				$('#update').attr('disabled', true);\r\n");
      out.write("			} else {\r\n");
      out.write("				newPwdResult.innerText = '🍀사용 가능한 비밀번호입니다.';\r\n");
      out.write("				newPwdResult.style.color = '#4373E6';\r\n");
      out.write("				newPwd1 = true;\r\n");
      out.write("				if(currentPwd && newPwd1 && newPwd2){\r\n");
      out.write("					$('#update').attr('disabled', false);\r\n");
      out.write("				}\r\n");
      out.write("			}\r\n");
      out.write("		});\r\n");
      out.write("		\r\n");
      out.write("		\r\n");
      out.write("		// ● ● ● 새 비밀번호 확인과의 값 일치 여부\r\n");
      out.write("		checkNewPassword.addEventListener('blur', function(){\r\n");
      out.write("			const chkNewPwd = this.value;\r\n");
      out.write("			if (newPwd1) {\r\n");
      out.write("				if(newPassword.value.trim() == chkNewPwd) {\r\n");
      out.write("					this.style.color = '#4373E6';\r\n");
      out.write("					newPassword.style.color = '#4373E6';\r\n");
      out.write("					newPwdResult.style.color = '#4373E6';\r\n");
      out.write("					newPwdResult.innerText = '🍀비밀번호 확인이 일치합니다.';\r\n");
      out.write("					newPwd2 = true;\r\n");
      out.write("					if(currentPwd && newPwd1 && newPwd2){\r\n");
      out.write("						$('#update').attr('disabled', false);\r\n");
      out.write("					}\r\n");
      out.write("				} else if(newPassword.value.trim() != chkNewPwd){\r\n");
      out.write("					this.style.color = '#DC6089';\r\n");
      out.write("					newPassword.style.color = '#DC6089';\r\n");
      out.write("					newPwdResult.style.color = '#DC6089';\r\n");
      out.write("					newPwdResult.innerText = '비밀번호 확인이 일치하지 않습니다.';\r\n");
      out.write("					newPwd2 = false;\r\n");
      out.write("					$('#update').attr('disabled', true);\r\n");
      out.write("				}\r\n");
      out.write("			}\r\n");
      out.write("		});\r\n");
      out.write("		\r\n");
      out.write("		document.getElementById('update').addEventListener('click', function(){\r\n");
      out.write("			$.ajax({\r\n");
      out.write("				url: '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/updatePwd.me',\r\n");
      out.write("				type: 'POST',\r\n");
      out.write("				dataType: 'json',\r\n");
      out.write("				data: {newPassword: newPassword.value.trim()},\r\n");
      out.write("				success: (data) =>{\r\n");
      out.write("					if(data.result == 1){\r\n");
      out.write("						window.close();\r\n");
      out.write("					} else if(data.result == 0){\r\n");
      out.write("						alert(\"비밀번호 변경에 실패하였습니다.\");\r\n");
      out.write("					}\r\n");
      out.write("				},\r\n");
      out.write("				error : (data) =>{\r\n");
      out.write("					console.log(data);\r\n");
      out.write("				}\r\n");
      out.write("			});\r\n");
      out.write("		});\r\n");
      out.write("		\r\n");
      out.write("	}\r\n");
      out.write("</script>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fset_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:set
    org.apache.taglibs.standard.tag.rt.core.SetTag _jspx_th_c_005fset_005f0 = (org.apache.taglibs.standard.tag.rt.core.SetTag) _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fscope_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.SetTag.class);
    boolean _jspx_th_c_005fset_005f0_reused = false;
    try {
      _jspx_th_c_005fset_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fset_005f0.setParent(null);
      // /WEB-INF/views/member/updatePwd.jsp(46,1) name = value type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f0.setValue(new org.apache.jasper.el.JspValueExpression("/WEB-INF/views/member/updatePwd.jsp(46,1) '${ pageContext.servletContext.contextPath }'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${ pageContext.servletContext.contextPath }",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      // /WEB-INF/views/member/updatePwd.jsp(46,1) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f0.setVar("contextPath");
      // /WEB-INF/views/member/updatePwd.jsp(46,1) name = scope type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f0.setScope("application");
      int _jspx_eval_c_005fset_005f0 = _jspx_th_c_005fset_005f0.doStartTag();
      if (_jspx_th_c_005fset_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fscope_005fnobody.reuse(_jspx_th_c_005fset_005f0);
      _jspx_th_c_005fset_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fset_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fset_005f0_reused);
    }
    return false;
  }
}
