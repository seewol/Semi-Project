/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.73
 * Generated at: 2023-06-28 00:58:45 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.common;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class bottom_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<style>\r\n");
      out.write("	#ftnav{text-align: left; margin-left: 30px; font-size: 13px; }\r\n");
      out.write("	#ftnav a{text-decoration: none; color: white;}\r\n");
      out.write("	#ftp{text-align: left; margin-left: 10px; font-size: 13px; line-height:170%;}\r\n");
      out.write("	#anker{margin-left: 50px; vertical-align: middle; text-align: right; margin-right: 30px; position: fixed; right:15px;  bottom: 35px; }\r\n");
      out.write("	.bi-arrow-up-circle-fill{color:black; font-size: 40px;}\r\n");
      out.write("	footer {\r\n");
      out.write("		display:flex;  \r\n");
      out.write("		align-items:center; \r\n");
      out.write("		position: relative;\r\n");
      out.write("		bottom: 0;\r\n");
      out.write("		height: 180px; width: 100%;\r\n");
      out.write("		min-width: 1000px;\r\n");
      out.write("		background: rgb(67, 115, 230); \r\n");
      out.write("		color: white; \r\n");
      out.write("		align-items: center; justify-content: space-between; \r\n");
      out.write("		vertical-align: middle; text-align: center;\r\n");
      out.write("	}\r\n");
      out.write("</style>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/bootstrap-icons@1.7.1/font/bootstrap-icons.css\">\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	<footer>\r\n");
      out.write("		<div id=\"a1\">\r\n");
      out.write("			<nav id=\"ftnav\">\r\n");
      out.write("		   		<b>\r\n");
      out.write("		   			<a target='_blank'>&nbsp;&nbsp;이용약관&nbsp;&nbsp;&nbsp;&nbsp;</a> |&nbsp;&nbsp;&nbsp;\r\n");
      out.write("		    		<a target='_blank'>&nbsp;개인정보취급방침&nbsp;&nbsp;&nbsp;&nbsp;</a> |&nbsp;&nbsp;&nbsp;\r\n");
      out.write("		    		<a target='_blank'>&nbsp;문의</a>\r\n");
      out.write("		    	</b>\r\n");
      out.write("		    	<br/>\r\n");
      out.write("		    	<br/>\r\n");
      out.write("			    <p id=\"ftp\">\r\n");
      out.write("			    	<span id=\"sp2\">책마루도서관 ｜ 사업자등록번호 : 123-45-67890 ｜ 서울 종로 제2023-01호 ｜ 대표자 : 박지은 ｜ 책임자 : 우진기</span><br/>\r\n");
      out.write("			    	<span>서울특별시 중구 남대문로 120 그레이츠 청계(구 대일빌딩) 2F, 3F</span><br/>\r\n");
      out.write("			    	<span id=\"sp1\">Copyright © 2023 Book Maru Library All Right Reserved</span>\r\n");
      out.write("			    </p>\r\n");
      out.write("		    </nav>\r\n");
      out.write("		</div>\r\n");
      out.write("		<div id=\"anker\"><a href=\"#\" onclick=\"scrollToElement('anchorPoint')\" ><i class=\"bi bi-arrow-up-circle-fill\"></a></i></div>\r\n");
      out.write("	</footer>\r\n");
      out.write("	<script>\r\n");
      out.write("	function scrollToElement(id) {\r\n");
      out.write("		  const element = document.getElementById(id);\r\n");
      out.write("		  element.scrollIntoView({ behavior: 'auto' });\r\n");
      out.write("		}\r\n");
      out.write("	</script>		\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
